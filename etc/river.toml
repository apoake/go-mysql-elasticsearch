# MySQL address, user and password
# user must have replication privilege in MySQL.
my_addr = "office:3306"
my_user = "root"
my_pass = "root"
my_charset = "utf8"

# Elasticsearch address
es_addr = "127.0.0.1:9200"
# Elasticsearch user and password, maybe set by shield, nginx, or x-pack
es_user = ""
es_pass = ""

# Path to store data, like master.info, if not set or empty,
# we must use this to support breakpoint resume syncing.
# TODO: support other storage, like etcd.
data_dir = "/data/go-es-data"

# Inner Http status address
stat_addr = "127.0.0.1:12800"

# pseudo server id like a slave
server_id = 1001

# mysql or mariadb
flavor = "mysql"

# mysqldump execution path
# if not set or empty, ignore mysqldump.
mysqldump = "mysqldump"

# if we have no privilege to use mysqldump with --master-data,
# we must skip it.
#skip_master_data = false

# minimal items to be inserted in one bulk
bulk_size = 128

# force flush the pending requests if we don't have enough items >= bulk_size
flush_bulk_time = "200ms"

# MySQL data source
[[source]]
schema = "base"
tables = ["member", "order_header", "member_points_item"]

[[source]]
schema = "wxy"
tables = ["member", "order_header", "member_points_item"]

# Below is for special rule mapping

# Very simple example
#
# desc t;
# +-------+--------------+------+-----+---------+-------+
# | Field | Type         | Null | Key | Default | Extra |
# +-------+--------------+------+-----+---------+-------+
# | id    | int(11)      | NO   | PRI | NULL    |       |
# | name  | varchar(256) | YES  |     | NULL    |       |
# +-------+--------------+------+-----+---------+-------+
#
# The table `t` will be synced to ES index `test` and type `t`.
[[rule]]
schema = "base"
table = "member"
index = "data"
type = "member"
filter = ["member_id", "channel_id", "grade_id", "member_code", "email", "mobile", "member_name", "gender", "birthday", "register_time", "status_id", "system_id"]
id = ["system_id", "member_id"]
extension = "system_id:1"

[[rule]]
schema = "wxy"
table = "member"
index = "data"
type = "member"
filter = ["member_id", "channel_id", "grade_id", "member_code", "email", "mobile", "member_name", "gender", "birthday", "register_time", "status_id", "system_id"]
id = ["system_id", "member_id"]
extension = "system_id:1"

[[rule]]
schema = "base"
table = "member_points_item"
index = "data"
type = "points"
parent = ["system_id", "member_id"]
filter = ["order_id", "order_code", "external_id", "member_id", "channel_id", "store_id", "store_code", "order_date", "order_amount", "pay_amount", "used_amount", "create_time", "status_id", "system_id"]
id = ["system_id", "member_id"]
extension = "system_id:2"

[[rule]]
schema = "wxy"
table = "member_points_item"
index = "data"
type = "points"
parent = ["system_id", "member_id"]
filter = ["order_id", "order_code", "external_id", "member_id", "channel_id", "store_id", "store_code", "order_date", "order_amount", "pay_amount", "used_amount", "create_time", "status_id", "system_id"]
id = ["system_id", "member_id"]
extension = "system_id:2"